// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: users.sql

package db

import (
	"context"

	null "github.com/guregu/null/v5"
)

const createUser = `-- name: CreateUser :one
INSERT INTO users (
  email,
  password,
  name
) VALUES (
  $1, $2, $3
) RETURNING id, email, password, google_id, linked_in_id, name, updated_at, created_at
`

type CreateUserParams struct {
	Email    string      `json:"email"`
	Password string      `json:"password"`
	Name     null.String `json:"name"`
}

func (q *Queries) CreateUser(ctx context.Context, arg CreateUserParams) (User, error) {
	row := q.db.QueryRowContext(ctx, createUser, arg.Email, arg.Password, arg.Name)
	var i User
	err := row.Scan(
		&i.ID,
		&i.Email,
		&i.Password,
		&i.GoogleID,
		&i.LinkedInID,
		&i.Name,
		&i.UpdatedAt,
		&i.CreatedAt,
	)
	return i, err
}

const getUser = `-- name: GetUser :one
SELECT id, email, password, google_id, linked_in_id, name, updated_at, created_at FROM users
WHERE email = $1 LIMIT 1
`

func (q *Queries) GetUser(ctx context.Context, email string) (User, error) {
	row := q.db.QueryRowContext(ctx, getUser, email)
	var i User
	err := row.Scan(
		&i.ID,
		&i.Email,
		&i.Password,
		&i.GoogleID,
		&i.LinkedInID,
		&i.Name,
		&i.UpdatedAt,
		&i.CreatedAt,
	)
	return i, err
}
